apiVersion: apps/v1
{{- if eq .Values.stage "development"}}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: app
  labels:
    app: app
spec:
  selector:
    matchLabels:
      app: app
  {{- if eq .Values.stage "development"}}
  serviceName: app
  {{- else }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  {{- end }}
  replicas: {{ ternary 1 0 .Values.enabled }}
  template:
    metadata:
      labels:
        app: app
    spec:
      podPriority:
        enabled: true
        priorityClassName: {{ .Values.stage }}
      terminationGracePeriodSeconds: 10
      imagePullSecrets:
        - name: diploi-pull-secret
      containers:
        - name: app
          image: {{ .Values.images.app }}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
            - containerPort: 3000
          startupProbe:
            exec:
              command:
              - cat
              - /tmp/pod-ready
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 2
            failureThreshold: 10
            #terminationGracePeriodSeconds: 10 #inherited from pod level
          livenessProbe:
            exec:
              command:
              - cat
              - /tmp/pod-ready
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 2
            failureThreshold: 2
            #terminationGracePeriodSeconds: 10 #inherited from pod level
          readinessProbe:
            exec:
              command:
              - cat
              - /tmp/pod-ready
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 2
            failureThreshold: 2
            #terminationGracePeriodSeconds: 10 #inherited from pod level
          {{- if eq .Values.stage "development"}}
          resources:
            requests:
              memory: 2Gi
            limits:
              cpuShares: 200
              memory: 3Gi
          {{- else }}
          resources:
            requests:
              memory: 500Mi
            limits:
              cpuShares: 500
              memory: 1Gi
          {{- end }}
          env:
            {{ range $key, $val := .Values.parameterGroupsEnabled }}
            {{ if $val }}
            - name: parameter_group_{{ $key }}_enabled
              value: "1"
            {{ end }}
            {{ end }}
            {{- range .Values.env }}
            {{- if contains "app" .contexts }}
            - name: {{ .identifier }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
            {{- range .Values.env }}
            {{- if contains "app" .contexts }}
            - name: {{ .identifier }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
            {{- range .Values.parameterGroups }}
            - name: {{ .identifier }}
              value: {{ .value | quote }}
            {{- end }}
            - name: REPOSITORY_URL
              value: {{ .Values.repositories.app.url }}
            - name: REPOSITORY_BRANCH
              value: {{ .Values.repositories.app.branch }}
            - name: APP_PUBLIC_URL
              value: {{ .Values.hosts.app }}
            - name: STAGE
              value: {{ .Values.stage }}
          volumeMounts:
            {{- if hasKey .Values.storage "app" }}
            - name: app-mount
              mountPath: /app
            - name: bash-history
              mountPath: /root/.bash_history
            - name: vscode-server
              mountPath: /root/.vscode-server
            - name: git-config
              mountPath: /root/.gitconfig
            {{- end }}
            - name: ssh-keys
              mountPath: /etc/ssh/internal_ssh_host_rsa.pub
              subPath: internal_ssh_host_rsa.pub
            - name: diploi-git
              mountPath: /etc/diploi-git
      volumes:
        {{- if hasKey .Values.storage "app" }}
        - name: app-mount
          hostPath:
            path: {{ .Values.storage.app.hostPath }}/app
        - name: bash-history
          hostPath:
            path: {{ .Values.storage.app.hostPath }}/root-persist/.bash_history
            type: FileOrCreate
        - name: vscode-server
          hostPath:
            path: {{ .Values.storage.app.hostPath }}/root-persist/.vscode-server
            type: DirectoryOrCreate
        - name: git-config
          hostPath:
            path: {{ .Values.storage.app.hostPath }}/root-persist/.gitconfig
            type: FileOrCreate
        {{- end }}
        - name: ssh-keys
          secret:
            secretName: ssh-keys
        - name: diploi-git
          secret:
            secretName: diploi-git



